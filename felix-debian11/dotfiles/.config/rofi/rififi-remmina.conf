#!/usr/bin/env bash

# This script checks if the remmina connection files have changed since its last execution.
# If they have then the script will (re)write the file `rififi-remmina-connections.conf` which
# contains the rofi menu and to be sourced.

REMMINA_FILES_PARENT_DIRECTORY="${HOME}/.local/share/remmina"
REMMINA_CONNECTIONS_DUMP_FILE="./rififi-remmina-connections.dump"
TEMPORARY_REMMINA_CONNECTIONS_DUMP_FILE="${REMMINA_CONNECTIONS_DUMP_FILE}.tmp"
REMMINA_CONNECTIONS_CONF_FILE="./rififi-remmina-connections.conf"

should_write_remmina_connections_conf_file(){
	VALUE_VARNAME="${1}"
	if [[ -z "${VALUE_VARNAME}" ]]; then
		printf "ERROR: VALUE_VARNAME should not be empty\n"
		return
	fi
	VALUE="true"
	if [[ -f "${REMMINA_CONNECTIONS_CONF_FILE}" ]]; then
		cat "${REMMINA_FILES_PARENT_DIRECTORY}"/*.remmina > "${TEMPORARY_REMMINA_CONNECTIONS_DUMP_FILE}"
		
		# Remmina rewrite the .remmina file at each sucessful connection, below we remove the key `last_sucess`
		sed -i 's/last_success=.*//g' "${TEMPORARY_REMMINA_CONNECTIONS_DUMP_FILE}"
		
		if [[ -f "${REMMINA_CONNECTIONS_DUMP_FILE}" ]]; then
			if cmp --silent -- "${REMMINA_CONNECTIONS_DUMP_FILE}" "${TEMPORARY_REMMINA_CONNECTIONS_DUMP_FILE}"; then
				VALUE="false"
				rm -f "${TEMPORARY_REMMINA_CONNECTIONS_DUMP_FILE}"
			else
				# We have a more recent dump file
				rm -f "${REMMINA_CONNECTIONS_DUMP_FILE}"
				mv "${TEMPORARY_REMMINA_CONNECTIONS_DUMP_FILE}" "${REMMINA_CONNECTIONS_DUMP_FILE}"
			fi
		fi
	fi
	export "${VALUE_VARNAME}"="${VALUE}"
}

key_value_retriever(){
	KEY="${1}"
	if [[ -z "${KEY}" ]]; then
		printf "ERROR: KEY should not be empty\n"
		return
	fi
	FILE="${2}"
	if [[ ! -f "${FILE}" ]]; then
		printf "ERROR: Cannot find FILE: %s\n" "${FILE}"
		return
	fi
	VALUE_VARNAME="${3}"
	if [[ -z "${VALUE_VARNAME}" ]]; then
		printf "ERROR: VALUE_VARNAME should not be empty\n"
		return
	fi
	MATCH=$(grep "^[[:space:]]*${KEY}=" "${FILE}")
	INDEX_OF_FIRST_EQUAL=$(expr index "${MATCH}" =)
	VALUE="${MATCH:${INDEX_OF_FIRST_EQUAL}}"
	export "${VALUE_VARNAME}"="${VALUE}"
}

write_remmina_connections_conf_file(){
	rm -f "${REMMINA_CONNECTIONS_CONF_FILE}"
	
	printf "MENU_TITLE=\"Remmina connection\"\n" >> "${REMMINA_CONNECTIONS_CONF_FILE}"
	printf "\n" >> "${REMMINA_CONNECTIONS_CONF_FILE}"
	
	# All menu item ids separated by space, we will build MENU_ITEM_ID_ALL_ARRAY with it later
	MENU_ITEM_ID_ALL_AS_STRING=""
	
	# All menu item text separated by new line characters, we will use `column` later to make a better display in rofi
	# Character `^` is used as column separator
	MENU_ITEM_TEXT_ALL_AS_STRING=""
	
	for REMMINA_FILE in "${REMMINA_FILES_PARENT_DIRECTORY}"/*.remmina; do
		key_value_retriever "group" "${REMMINA_FILE}" "REMOTE_GROUP"
		key_value_retriever "name" "${REMMINA_FILE}" "REMOTE_NAME"
		key_value_retriever "protocol" "${REMMINA_FILE}" "REMOTE_PROTOCOL"
		key_value_retriever "server" "${REMMINA_FILE}" "REMOTE_SERVER"
		
		# Build the MENU_ITEM_ID and add it to MENU_ITEM_ID_ALL_AS_STRING
		MENU_ITEM_ID=$(printf "%s_%s_%s_%s" "${REMOTE_GROUP}" "${REMOTE_NAME}" "${REMOTE_PROTOCOL}" "${REMOTE_SERVER}")
		MENU_ITEM_ID=$(echo "${MENU_ITEM_ID}"|sed 's/[^[:alnum:]_]//g')
		MENU_ITEM_ID_ALL_AS_STRING+="${MENU_ITEM_ID} "
		
		# Build MENU_ITEM_TEXT and add it to MENU_ITEM_TEXT_ALL_AS_STRING
		MENU_ITEM_TEXT="${REMOTE_PROTOCOL} ^ ${REMOTE_NAME} ^ ${REMOTE_SERVER}"
		MENU_ITEM_TEXT_ALL_AS_STRING+="${MENU_ITEM_TEXT}\n"
		
		# We can already add the others parameters in the conf file
		printf "MENU_ITEM_VISIBLE_ARRAY[\"${MENU_ITEM_ID}\"]=\"true\"\n" >> "${REMMINA_CONNECTIONS_CONF_FILE}"
		printf "MENU_ITEM_REQUEST_CONFIRMATION_ARRAY[\"${MENU_ITEM_ID}\"]=\"false\"\n" >> "${REMMINA_CONNECTIONS_CONF_FILE}"
		printf "MENU_ITEM_SYMBOL_ARRAY[\"${MENU_ITEM_ID}\"]=\"\"\n" >> "${REMMINA_CONNECTIONS_CONF_FILE}"
		printf "MENU_ITEM_ACTION_ARRAY[\"${MENU_ITEM_ID}\"]=\"xdg-open ${REMMINA_FILE}\"\n" >> "${REMMINA_CONNECTIONS_CONF_FILE}"
		
		printf "\n" >> "${REMMINA_CONNECTIONS_CONF_FILE}"
	done
	
	printf "MENU_ITEM_ID_ALL_ARRAY=( %s)\n" "${MENU_ITEM_ID_ALL_AS_STRING}\n" >> "${REMMINA_CONNECTIONS_CONF_FILE}"
	printf "\n" >> "${REMMINA_CONNECTIONS_CONF_FILE}"
	
	# Call `column` on MENU_ITEM_TEXT_ALL_AS_STRING and add MENU_ITEM_TEXT_ARRAY to the conf file
	COLUMNIZED_MENU_ITEM_TEXT_ALL_AS_STRING=$(printf "${MENU_ITEM_TEXT_ALL_AS_STRING}" | column -s\^ -t)
	readarray -t TEMPORARY_MENU_ITEM_TEXT_ARRAY <<< "${COLUMNIZED_MENU_ITEM_TEXT_ALL_AS_STRING}"
	MENU_ITEM_INDEX=0
	for MENU_ITEM_ID in ${MENU_ITEM_ID_ALL_AS_STRING}; do
		printf "MENU_ITEM_TEXT_ARRAY[\"${MENU_ITEM_ID}\"]=\"${TEMPORARY_MENU_ITEM_TEXT_ARRAY[${MENU_ITEM_INDEX}]}\"\n" >> "${REMMINA_CONNECTIONS_CONF_FILE}"
		((MENU_ITEM_INDEX+=1))
	done
}

should_write_remmina_connections_conf_file "SHOULD_WRITE_REMMINA_CONNECTIONS_CONF_FILE"
if ${SHOULD_WRITE_REMMINA_CONNECTIONS_CONF_FILE}; then
	write_remmina_connections_conf_file
fi

source "${REMMINA_CONNECTIONS_CONF_FILE}"
